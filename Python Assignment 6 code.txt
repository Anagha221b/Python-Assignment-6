Object Oriented Programming in Python.

Question 1: (5 Marks) 
Build a program to manage a university's course catalog. You want to define a base class Course that has the following properties:
course_code: a string representing the course code (e.g., "CS101")
course_name: a string representing the course name (e.g., "Introduction to Computer Science")
credit_hours: an integer representing the credit hours for the course (e.g., 3)

You also want to define two subclasses CoreCourse and ElectiveCourse, which inherit from the Course class.
CoreCourse should have an additional property required_for_major which is a boolean representing whether the course is required for a particular major.
ElectiveCourse should have an additional property elective_type which is a string representing the type of elective (e.g., "general", "technical", "liberal arts").

Solution:
	#This program will manage a university's course catalog
	#base class
	class Course: 
	    def __init__(self, course_code, course_name, credit_hours):
	        self.course_code = course_code
	        self.course_name = course_name
	        self.credit_hours = credit_hours

	# subclass
	class CoreCourse(Course):
	    def __init__(self, course_code, course_name, credit_hours, required_for_major):
	        super().__init__(course_code, course_name, credit_hours)
	        self.required_for_major = required_for_major

	# subclass
	class ElectiveCourse(Course):
	    def __init__(self, course_code, course_name, credit_hours, elective_type):
	        super().__init__(course_code, course_name, credit_hours)
	        self.elective_type = elective_type

	#object created for Core Course
	core_course=CoreCourse("CS101", "Introduction to Computer Science", 3, True)

	#object created for Elective Course
	elective_course=ElectiveCourse("ENGL102", "Creative Writing", 2, "liberal arts")

	#for Core course
	print("Core Course-> ")
	print(f"  Course code: {core_course.course_code}")
	print(f"  Course name: {core_course.course_name}")
	print(f"  Credit hours: {core_course.credit_hours}")
	print(f"  Required for major: {core_course.required_for_major}")

	#for Elective course
	print("Elective Course-> ")
	print(f"  Course code: {elective_course.course_code}")
	print(f"  Course name: {elective_course.course_name}")
	print(f"  Credit hours: {elective_course.credit_hours}")
	print(f"  Elective type: {elective_course.elective_type}")
	


Question 2: (5 Marks) 
Create a Python module named employee that contains a class Employee with attributes name, salary and methods get_name() and get_salary(). Write a program to use this module to create an object of the Employee class and display its name and salary.

Solution:
	->Employee.py(module)
	class Employee:
	    def __init__(self,name,salary):
	        self.name=name
	        self.salary=salary

	    #function to get name of the employee    
	    def get_name(self):
	        return self.name

	    #function to get salary of the employee  
	    def get_salary(self):
        	return self.salary
	
	->Question2.py
	#importing employee class from Employee module
	from Employee import Employee

	#object for Employee 1
	emp=Employee("Rohan",35000)
	# object for Employee 2
	emp1=Employee("Virat", 43000)

	#for Employee 1
	print("Employee 1 details->")
	print(f"  Employee name: {emp.get_name()}")
	print(f"  Employee Salary: {emp.get_salary()}")

	#for Employee 2
	print("Employee 2 details->")
	print(f"  Employee name: {emp1.get_name()}")
	print(f"  Employee name: {emp1.get_salary()}")
